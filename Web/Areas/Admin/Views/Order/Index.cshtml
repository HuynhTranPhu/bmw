@model Web.Models.ViewModel.AppointmentViewModel

<form method="get">
    <br /><br />
    <h2 class="text-info">Order List</h2>
    <br />
    <div style="height: 50px; background-color:aliceblue" class="container">
        @* We will add search criteria *@
        <div class="col-12">
            <div class="row" style="padding-top:10px;">
                <div class="col-2">
                    Customer Name
                </div>
                <div class="col-3">
                    @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-2">
                    Order Date
                </div>
                <div class="col-3">
                    @Html.Editor("searchDate", new { htmlAttributes = new { @class = "form-control", @id = "datepicker" } })
                </div>
                <div class="col-2">
                    <button type="submit" name="submit" value="Search" class="btn btn-primary form-control">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            </div>
        </div>
    </div>

    <br /><br />
    <div>
        <table class="table table-striped border">
            <tr class="table-info">
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().SalesPerson.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().AppointmentDate)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().CustomerName)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().CustomerPhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().CustomerEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().Address)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.Order.FirstOrDefault().isConfirmed)
                </th>
                <th>
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Order)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => item.SalesPerson.Name)
                    </td>

                    <td>
                        @Html.DisplayFor(m => item.AppointmentDate)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.CustomerName)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.CustomerPhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.CustomerEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(m => item.isConfirmed)
                    </td>
                    <td>
                        <partial name="_TableButtonPartial" model="item.OrderID" />
                    </td>
                </tr>

            }
        </table>
    </div>
    <div page-model="@Model.Page" page-action="Index" page-classes-enabled="true"
         page-class="btn border" page-class-normal="btn btn-default active"
         page-class-selected="btn btn-primary active" class="btn-group m-1"></div>
</form>
@section Scripts{
    <script>$(function () {
            $("#datepicker").datepicker({
                minDate: +1, maxDate: "+3M"
            });
        });</script>
}